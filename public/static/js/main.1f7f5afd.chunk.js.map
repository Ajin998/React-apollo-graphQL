{"version":3,"sources":["assets/spacex.jpg","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classnames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","CircularProgress","console","log","launches","map","LAUNCH_QUERY","Launch","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","cache","InMemoryCache","App","src","logo","alt","style","width","height","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7f5afd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spacex.f74fc60d.jpg\";","import React from \"react\";\nimport classnames from \"classnames\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nfunction LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h5>\n            Mission:{\" \"}\n            <span\n              className={classnames({\n                \"text-success\": launch_success,\n                \"text-danger\": !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h5>\n          <p>\n            Date: <Moment format=\"DD/MM/YYYY HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LaunchItem;\n","import React from \"react\";\n\nfunction MissionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Succeed\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Failed\n      </p>\n    </div>\n  );\n}\n\nexport default MissionKey;\n","import { useQuery, gql } from \"@apollo/client\";\nimport LaunchItem from \"./LaunchItem\";\nimport MissionKey from \"./MissionKey\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\nfunction Launches() {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) return <CircularProgress />;\n  if (error) console.log(error);\n  return (\n    <>\n      <h1 className=\"display-4 my-3\">Launches</h1>\n      <MissionKey />\n      {data.launches.map((launch) => (\n        <LaunchItem key={launch.flight_number} launch={launch} />\n      ))}\n      <button className=\"btn btn-primary\">Read More</button>\n    </>\n  );\n}\n\nexport default Launches;\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Moment from \"react-moment\";\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\nfunction Launch(props) {\n  let { flight_number } = props.match.params;\n  flight_number = parseInt(flight_number);\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number },\n  });\n  if (loading) return <CircularProgress />;\n  if (error) console.log(\"Error while fetching\", error);\n  const {\n    mission_name,\n    launch_success,\n    launch_year,\n    launch_date_local,\n    rocket: { rocket_id, rocket_name, rocket_type },\n  } = data.launch;\n  return (\n    <div>\n      <h2 className=\"display-3 my-3\">\n        <span className=\"text-dark\">Mission:</span>\n        {mission_name}\n      </h2>\n      <h4 className=\"mb-3\">Launch Details</h4>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          Flight Number: {data.launch.flight_number}\n        </li>\n        <li className=\"list-group-item\">Launced Year: {launch_year}</li>\n        <li className=\"list-group-item\">\n          Launched at: <Moment format=\"DD/MM/YYYY\">{launch_date_local}</Moment>\n        </li>\n        <li className=\"list-group-item\">\n          Launch Succeed:{\" \"}\n          <span\n            className={classnames({\n              \"text-success\": launch_success,\n              \"text-danger\": !launch_success,\n            })}\n          >\n            {launch_success ? \"Yes\" : \"No\"}\n          </span>\n        </li>\n      </ul>\n      {/* Rocket details */}\n      <h4 className=\"my-3 \">Rocket Details</h4>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">Rocket Number: {rocket_id}</li>\n        <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n        <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n      </ul>\n      <Link to =\"/\" className=\"btn btn-primary mt-3\">Back</Link>\n    </div>\n  );\n}\n\nexport default Launch;\n","import \"./App.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport logo from \"./assets/spacex.jpg\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img\n            src={logo}\n            alt=\"spacex_logo\"\n            style={{\n              width: 300,\n              height: 120,\n              display: \"block\",\n              margin: \"auto\",\n            }}\n          />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}